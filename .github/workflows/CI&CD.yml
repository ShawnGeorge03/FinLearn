name: Group 1 CI & CD
on:
  push:
    branches:
      - group-1
env:
  NODE_VERSION: 18
jobs:
  test-server-changes:
    name: Test Server Changes
    runs-on: ubuntu-latest
    steps:
      - name: Checkout HEAD Commit
        uses: actions/checkout@v3.5.3
        with:
          ref: ${{ github.head_ref }}

      - name: Setup Node.js Environment
        uses: actions/setup-node@v3.7.0
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install Packages
        run: npm ci

      - name: Create .env
        working-directory: server
        run: |
          touch .env
          echo -en 'PORT=4000\nALPHAVANTAGE_API_KEY=${{ secrets.GP1_ALPHAVANTAGE_API_KEY }}\nMONGO_URI=${{ secrets.GP1_MONGO_URI }}' > .env

      - name: Run Tests
        run: npm run test -w server

      - name: Publish Coverage Reports
        uses: actions/upload-artifact@v3
        with:
          name: Coverage Reports
          path: server/coverage/

      - name: Publish Test Results
        uses: actions/upload-artifact@v3
        with:
          name: Test Reports
          path: server/pre-build-tests.html

  build-server-image:
    name: Build Server Image
    runs-on: ubuntu-latest
    needs: test-server-changes
    steps:
      - name: Checkout HEAD Commit
        uses: actions/checkout@v3.5.3
        with:
          ref: ${{ github.head_ref }}

      - name: Copy package-lock.json to server/
        run: cp package-lock.json server/

      - name: DockerHub Login
        uses: docker/login-action@v2.2.0
        with:
          username: ${{ secrets.GP1_DOCKERHUB_USERNAME }}
          password: ${{ secrets.GP1_DOCKER_TOKEN }}

      - name: Docker Setup Buildx
        uses: docker/setup-buildx-action@v2.9.1

      - name: Build and Push
        uses: docker/build-push-action@v4.1.1
        with:
          context: '{{defaultContext}}:server'
          file: Dockerfile
          push: true
          tags: ${{ secrets.GP1_DOCKERHUB_USERNAME }}/server:latest

  deploy-server-image:
    name: Deploy Server
    runs-on: ubuntu-latest
    needs: build-server-image
    steps:
      - name: Checkout HEAD Commit
        uses: actions/checkout@v3.5.3
        with:
          ref: ${{ github.head_ref }}

      - name: Request to Start Deployment
        uses: joelwmale/webhook-action@2.3.2
        with:
          url: ${{ secrets.GP1_GCP_SERVER_WEBHOOK_URL}}

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1.1.1
        with:
          service_account: ${{ secrets.GP1_GCP_SA_EMAIL }}
          credentials_json: ${{ secrets.GP1_GCP_SA_KEY }}

      - name: Set up gcloud SDK Environment
        uses: google-github-actions/setup-gcloud@v1.1.1

      - name: Verify Server Deployment
        run: bash checkDeploy.sh ${{ secrets.GP1_GCP_REGION }} server

  verify-deployed-server:
    name: Verify Server Deployment
    runs-on: ubuntu-latest
    needs: deploy-server-image
    steps:
      - name: Checkout HEAD Commit
        uses: actions/checkout@v3.5.3
        with:
          ref: ${{ github.head_ref }}

      - name: Setup Node.js Environment
        uses: actions/setup-node@v3.7.0
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install newman
        run: npm install -g newman newman-reporter-htmlextra

      - name: Run Learning Collection
        working-directory: server/newman
        run: |
          newman run collections/Learning.json --env-var BASE_URL=${{ secrets.GP1_SERVER_URL }} -g global.json --delay-request 5 -x -r htmlextra --reporter-htmlextra-export reports/learning.html --reporter-htmlextra-displayProgressBar --reporter-htmlextra-browserTitle "Learning Report" --reporter-htmlextra-title "Learning Results"

      - name: Run Research Collection
        working-directory: server/newman
        run: |
          newman run collections/Research.json --env-var BASE_URL=${{ secrets.GP1_SERVER_URL }} --delay-request 5 -x -r htmlextra --reporter-htmlextra-export reports/research.html --reporter-htmlextra-displayProgressBar --reporter-htmlextra-browserTitle "Research Report" --reporter-htmlextra-title "Research Results"

      - name: Publish Postman Reports
        uses: actions/upload-artifact@v3
        with:
          name: Deployment Reports
          path: server/newman/reports/

  build-client-image:
    name: Build Client Image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout HEAD Commit
        uses: actions/checkout@v3.5.3
        with:
          ref: ${{ github.head_ref }}

      - name: Copy package-lock.json to client/
        run: cp package-lock.json client/

      - name: DockerHub Login
        uses: docker/login-action@v2.2.0
        with:
          username: ${{ secrets.GP1_DOCKERHUB_USERNAME }}
          password: ${{ secrets.GP1_DOCKER_TOKEN }}

      - name: Docker Setup Buildx
        uses: docker/setup-buildx-action@v2.9.1

      - name: Build and Push
        uses: docker/build-push-action@v4.1.1
        with:
          build-args: SEVER_URL=${{ secrets.GP1_SERVER_URL }}
          context: '{{defaultContext}}:client'
          file: Dockerfile
          push: true
          tags: ${{ secrets.GP1_DOCKERHUB_USERNAME }}/client:latest

  deploy-client-image:
    name: Deploy Client
    runs-on: ubuntu-latest
    needs: build-client-image
    steps:
      - name: Checkout HEAD Commit
        uses: actions/checkout@v3.5.3
        with:
          ref: ${{ github.head_ref }}

      - name: Request to Start Deployment
        uses: joelwmale/webhook-action@2.3.2
        with:
          url: ${{ secrets.GP1_GCP_CLIENT_WEBHOOK_URL}}

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1.1.1
        with:
          service_account: ${{ secrets.GP1_GCP_SA_EMAIL }}
          credentials_json: ${{ secrets.GP1_GCP_SA_KEY }}

      - name: Set up gcloud SDK Environment
        uses: google-github-actions/setup-gcloud@v1.1.1

      - name: Verify Server Deployment
        run: bash checkDeploy.sh ${{ secrets.GP1_GCP_REGION }} client
